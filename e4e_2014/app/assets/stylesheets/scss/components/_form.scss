// Forms
//
// Forms include all aspects of a form: heading/legend, fieldsets, text inputs, checkboxes, radio buttons, and error messaging. See an example below of a form with all possible elements.
//
// Styleguide 5.0.0


// Form Heading
//
// The top level heading for a form. This should be applied to a h1 &ndash; h6 or &lt;legend&gt; element.
//
// Markup: <h1 class="Form-heading {$modifiers}">Form Heading</h1>
// 
// .Form-heading--large - A larger form heading
//
// Styleguide 5.1.0

.Form-heading {
	display: block;
	width: 100%;
	padding-bottom: rem(10);
	border-bottom: rem(1) solid $color1;
	@include font-size($milli-size);
	text-transform: uppercase;
	font-weight: 600;
	color: $color1;
}
	.Form-heading--large {
		@include font-size($h3-size);
		color: $color4;
		font-weight: normal;
	}

// Input Fields
//
// Text fields are single line fields that a user can enter text in. These fields are: text, email, search, tel, url, and number. The number field, by HTML5 default, includes a step control.
// 
// By default, fields are 100% width and will expand to the size of their parent container. For example, a grid column. However, you can apply sizing classes directly to a field such as <em>u-size1of2</em>. See the number field below for an example.
//
// Markup: <form class="Form">
//   <p><input type="text" id="text-input" placeholder="Text input" /></p>
//   <p><input type="email" id="email-input" placeholder="Email input" /></p>
//   <p><input type="search" id="search-input" placeholder="Search input" /></p>
//   <p><input type="tel" id="tel-input" placeholder="(___) ___-____" /></p>
//   <p><input type="url" id="url-input" placeholder="URL input" /></p>
//   <p><input type="number" id="number-input" class="u-size1of2" placeholder="Number input" /></p>
// </form>
// 
// Styleguide 5.2.0
.Form {
	input[type="text"],
	input[type="email"],
	input[type="search"],
	input[type="tel"],
	input[type="url"],
	input[type="number"] {
		width: 100%;
		padding: rem(10) rem(15);
		border: rem(1) solid #b0b6bb;
		border-radius: rem($brand-round);
		box-shadow: inset 0 rem(1) rem(2) rgba(0,0,0,.1);
		font-family: $base-font-family;
		color: $color5;
		line-height: $line-height-ratio;

		&:focus {
			outline: rem(1) solid $bgcolorSecondary4;
		}
	}

	input[type="tel"] {
		letter-spacing: rem(1);
	}

	label {
		display: block;
		margin-bottom: rem($half-spacing-unit);
		line-height: 1;
	}
}

// Field Labels
//
// Labels for text fields are positioned above the field by default.
// 
// In the case where the label is positioned next to the field use a grid to achive the desired layout. Note that the utility class <em>u-marginFlush</em> must be used to remove the default bottom margin from the label so that it lines up correctly with the field.
//
// Markup: <form class="Form">
//   <p>
//     <label for="text-input">Field Label:</label>
//     <input type="text" id="text-input" placeholder="Text input" />
//   </p>
//   <div class="Grid">
//     <div class="Grid-item u-size1of6 u-valignMiddle">
//       <label for="text-input" class="u-marginFlush">Field Label:</label>
//     </div>
//     <div class="Grid-item u-size5of6 u-valignMiddle">
//       <input type="text" id="text-input" placeholder="Text input" />
//     </div>
//   </div>
// </form>
//
// Styleguide 5.2.1

// Field Description
//
// Description text is optional textt that is placed below a field label and above the field. Should a field with a description be next to a field without a description the fields should always be aligned and the label should shift down.
//
// Markup: <form class="Form">
//   <label for="text-input">Field Label:</label>
//   <p class="Form-description">This is some description text for a form field.</p>
//   <input type="text" id="text-input" placeholder="Text input" />
// </form>
//
// Styleguide 5.2.2
.Form-description {
	overflow: hidden;
	margin-bottom: rem($half-spacing-unit);
	@include font-size($centi-size);
	color: $color4;
}

// Disabled Fields
//
// A form field that has been disabled via the disabled attribute will automatically receive this styling.
//
// Markup: <form class="Form">
//   <input type="text" placeholder="Disabeld field" disabled />
// </form>
// 
// Styleguide 5.2.3

input[disabled] {
	background-color: #ebedee;
}

// Field Error State
//
// Form fields that return an error will both highlight the offending field as well as add error messaging directly below the field. Each field will have its own error messaging. Each field may have multiple error messages.
// 
// Note that as error messages get added the form fields will always be aligned at the bottom with any combination of field label, field description, and error messaging stacking above.
//
// Markup: <form class="Form Grid Grid--gutter Grid--verticalGutterDouble">
//   <div class="Grid-item u-size1of2 u-valignBottom">
//     <label for="text-input">Field Label:</label>
//     <p class="Form-description">This is some description text for a form field.</p>
//     <input type="text" id="text-input" placeholder="Text input" />
//   </div>
//   <div class="Grid-item u-size1of2 u-valignBottom">
//     <p class="Form-description"></p>
//     <label for="text-input">Field Label:</label>
//     <p class="Form-errorMessage">Error messaging goes here.</p>
//     <input type="text" id="text-input" class="is-error" placeholder="Text input" />
//   </div>
//   <div class="Grid-item u-size1of2 u-valignBottom">
//     <label for="text-input">Field Label:</label>
//     <p class="Form-description">This is some description text for a form field.</p>
//     <p class="Form-errorMessage">Error messaging goes here.</p>
//     <input type="text" id="text-input" class="is-error" placeholder="Text input" />
//   </div>
//   <div class="Grid-item u-size1of2 u-valignBottom">
//     <label for="text-input">Field Label:</label>
//     <input type="text" id="text-input" placeholder="Text input" />
//   </div>
// </form>
// 
// Styleguide 5.2.4

input,
.Form-input {
	padding: rem(10) rem(15);
	border: rem(1) solid #b0b6bb;
	border-radius: rem(4);
	box-shadow: inset 0 rem(1) rem(2) rgba(0,0,0,.1);
	font-family: $base-font-family;
	color: $color5;

	&:focus {
		outline: none;
	}

	&.is-error {
		border-color: $color7 !important;
		color: $color7 !important;
	}
}

.Form-errorMessage {
	font-size: rem($centi-size);
	line-height: $line-height-ratio;
	margin-bottom: rem($half-spacing-unit);
	color: $color7;
}	

::-webkit-input-placeholder {
   color: $color1;
}

:-moz-placeholder {
   color: $color1;  
}

::-moz-placeholder {
   color: $color1;  
}

:-ms-input-placeholder {  
   color: $color1;  
}

// Field Extensions
//
// Text may be prepended or appended to a text field seamlessly using the visual style shown below. 
//
// Markup: <form class="Form">
//   <div class="Form-inputGroup">
//     <input type="text" id="tel-input" />
//     <span class="Form-inputAddOn">kg</span>
//   </div>
//   <div class="Form-inputGroup">
//     <span class="Form-inputAddOn">$</span>
//     <input type="text" id="url-input" />
//   </div>
//   <div class="Form-inputGroup">
//     <span class="Form-inputAddOn">http://</span>
//     <input type="url" id="url-input" />
//     <span class="Form-inputAddOn">.com</span>
//   </div>
// </form>
//
// Styleguide 5.2.5

.Form-inputGroup {
	display: table;
	width: 100%;
	border-collapse: separate;
	margin-bottom: rem($base-line-height);

	input[type="text"],
	input[type="email"],
	input[type="search"],
	input[type="tel"],
	input[type="url"],
	input[type="number"] {
		display: table-cell;
		width: 100%;
		border-radius: 0 0 0 0;
		border-left: none;
		border-right: none;

		&:first-child {
			border-left: rem(1) solid #b0b6bb;
			border-top-left-radius: rem(4);
			border-bottom-left-radius: rem(4);
		}

		&:last-child {
			border-right: rem(1) solid #b0b6bb;
			border-top-right-radius: rem(4);
			border-bottom-right-radius: rem(4);
		}
	}
}
	.Form-inputAddOn {
		display: table-cell;
		width: 1%;
		vertical-align: middle;
		padding: 0 rem(15);
		border: rem(1) solid #b0b6bb;
		background-color: #ebedee;
		color: $color4;

		&:first-child {
			border-radius: rem(4) 0 0 rem(4);
		}

		&:last-child {
			border-radius: 0 rem(4) rem(4) 0;
		}
	}

// Required Fields
//
// A field may be marked as required.  
//
// Markup: <form class="Form">
//     <label for="required-field" class="Form-required">Name</label>
//     <input type="text" id="required-field" />
// </form>
//
// Styleguide 5.2.6

.Form-required {
	position: relative;

	&:before {
		content: "\2217";
		position: absolute;
		top: rem(-4);
		left: rem(-8);
		color: $color7;
	}
}

// Checkboxes
//
// To apply the CTCT checkbox style apply the class <em>Form-checkbox</em> to a checkbox input. The &lt;label> element must come after the checkbox.
//
// Markup: <form class="Form">
//   <input type="checkbox" class="Form-checkbox" id="checkbox-test1" /><label for="checkbox-test1">Checkbox</label>
// </form>
//
// Styleguide 5.3.0

.Form-checkbox[type=checkbox] {
	display: none;

	+ label {
		position: relative;
		display: inline-block;
		width: rem(21);
		height: rem(21);
		line-height: 1.5;
		padding-left: rem(33);

		&:before {
			content: " ";
			position: absolute;
			border: 2px solid $color1;
			border-radius: rem(2);
			width: rem(21);
			height: rem(21);
			left: 0;
			margin: 0;
		}
	}

	&:checked + label {
		position: relative;
		
		&:before {
			content: " ";
			position: absolute;
			z-index: 1;
			border: 2px solid #0d76c1;
			color: #0d76c1;
			background-color: #e2f0f7;
		}

		&:after {
			font-family: 'ctct_icon_font';
			content: "\e023";
			position: absolute;
			z-index: 1;
			top: 0;
			left: rem(5);
			height: rem(21);
			font-size: rem(11);
			color: #0d76c1;
			line-height: 2.25;
		}
	}
}

// Radio Buttons
//
// To apply the CTCT radio button style apply the class <em>Form-radio</em> to a checkbox input. The &lt;label> element must come after the checkbox.
//
// Markup: <form class="Form">
//   <input type="radio" class="Form-radio" name="radio-test" id="radio-test1" /><label for="radio-test1" class="u-paddingRight">Radio Button 1</label>
//   <input type="radio" class="Form-radio" name="radio-test" id="radio-test2" /><label for="radio-test2">Radio Button 2</label>
// </form>
//
// Styleguide 5.4.0

.Form-radio[type=radio] {
	display: none;

	+ label {
		position: relative;
		display: inline-block;
		margin: 0;
		padding-left: rem(33);
		line-height: 1.75;

		&:before {
			content: " ";
			position: absolute;
			top: 2px;
			left: 2px;
			width: rem(21);
			height: rem(21);
			border: 2px solid $color1;
			border-radius: rem(25);
			@include font-size(17);
			line-height: rem(22);
			padding-left: rem(2);
			color: #0d76c1;
		}
	}

	&:checked + label {

		&:before {
			content: " ";
			position: absolute;
			z-index: 1;
			top: rem(3);
			left: rem(3);
			width: rem(19);
			height: rem(19);
			border: 4px solid #e2f0f7;
			background-color: #0d76c1;
		}

		&:after {
			content: " ";
			position: absolute;
			z-index: 1;
			top: rem(2);
			left: rem(2);
			width: rem(21);
			height: rem(21);
			border-radius: rem(25);
			border: 2px solid #0d76c1;
		}
	}
}