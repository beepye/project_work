//************************************************************************//
// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7
// (http://bjango.com/articles/min-device-pixel-ratio/)
//************************************************************************//

@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx) {
    @content;
  }
}

//************************************************************************//
// Generate a retina and non-retina background image, the retina image 
// will output to a HiPDI media query
//************************************************************************//

@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: false) {
  @if $asset-pipeline {
    background-image: image-url("#{$filename}.#{$extension}");
  }
  @else {
    background-image:       url("#{$filename}.#{$extension}");
  }

  @include hidpi {
    @if $asset-pipeline {
      @if $retina-filename {
        background-image: image-url("#{$retina-filename}.#{$extension}");
      }
      @else {
        background-image: image-url("#{$filename}#{$retina-suffix}.#{$extension}");
      }
    }

    @else {
      @if $retina-filename {
        background-image: url("#{$retina-filename}.#{$extension}");
      }
      @else {
        background-image: url("#{$filename}#{$retina-suffix}.#{$extension}");
      }
    }

    background-size: $background-size;

  }
}

//************************************************************************//
// Outputs vendor-prefixed placeholders for styling 
// Must be nested in a rule-set.
// e.g. input {
//		  width: 300px;
//
//		  @include placeholder {
//		    color: red;
//		  }
//		}
//************************************************************************//

@mixin placeholder {
  @each $placeholder in $placeholders {
    @if $placeholder == "-webkit-input-placeholder" {
      &::#{$placeholder} {
        @content;
      }
    }
    @else if $placeholder == "-moz-placeholder" {
      // FF 18-
      &:#{$placeholder} {
        @content;
      }

      // FF 19+
      &::#{$placeholder} {
        @content;
      }
    }
    @else {
      &:#{$placeholder} {
        @content;
      }
    }
  }
}

//************************************************************************//
// Hides text that can still be read by screen-readers
// http://nicolasgallagher.com/another-css-image-replacement-technique
//************************************************************************//

@mixin hide-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

//************************************************************************//
// Positioning e.g. @include position(absolute, 10px 0 0 100px);
// The default position is relative
//************************************************************************//

@mixin position($position: relative, $coordinates: 0 0 0 0) {

  @if type-of($position) == list {
    $coordinates: $position;
    $position: relative;
  }

  $top: nth($coordinates, 1);
  $right: nth($coordinates, 2);
  $bottom: nth($coordinates, 3);
  $left: nth($coordinates, 4);

  position: $position;

  @if $top == auto {
    top: $top;
  }
  @else if not(unitless($top)) {
    top: $top;
  }

  @if $right == auto {
    right: $right;
  }
  @else if not(unitless($right)) {
    right: $right;
  }

  @if $bottom == auto {
    bottom: $bottom;
  }
  @else if not(unitless($bottom)) {
    bottom: $bottom;
  }

  @if $left == auto {
    left: $left;
  }
  @else if not(unitless($left)) {
    left: $left;
  }
}

@mixin form {
  border: none;
  width: 95%;
  margin: 0 auto 2.5%;

  fieldset {
    border: none;
    margin-top: 10px;
    background: #fff;
    padding: 0;

    div {
      border: none;
      border-bottom: 1px solid $darktan;
      margin: 0 15px;
      padding: 15px 0;

      input {
        border: none;

        &:focus {
          outline: none;
        }
      }
    }
  }
}

//************************************************************************//
// This is for the generic green button used throughout the application
//************************************************************************//

@mixin greenbutton {
  @include position(absolute, 10px 10px 0 0);
  @include border-radius($radius);
  background: $green;
  text-align: center;
  border: none;
  color: #fff;
  padding: 12px 15px;
}













